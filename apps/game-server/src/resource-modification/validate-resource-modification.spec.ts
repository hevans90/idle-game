// Generated by CodiumAI

import { ResourceErrorTypes } from '../entities/error-enums/resource-errors';
import { validateResourceModification } from './validate-resource-modification';

describe('validateResourceModification', () => {
  // Valid resource type and amount
  it('should return the modifierKey when the resource type and amount are valid', () => {
    const resources = [
      {
        resource_type: { id: '1', type: 'galactic credits' },
        value: 100,
      },
      {
        resource_type: { id: '2', type: 'common metals' },
        value: 50,
      },
    ];
    const resource_amount = 10;
    const resource_id = '1';

    const result = validateResourceModification({
      resources,
      resource_amount,
      resource_id,
    });

    expect(result).toEqual({ modifierKey: 'galacticCreditsIncrement' });
  });

  // Valid resource type and zero amount
  it('should return the modifierKey when the resource type is valid and the amount is zero', () => {
    const resources = [
      {
        resource_type: { id: '1', type: 'galactic credits' },
        value: 100,
      },
      {
        resource_type: { id: '2', type: 'common metals' },
        value: 50,
      },
    ];
    const resource_amount = 0;
    const resource_id = '1';

    const result = validateResourceModification({
      resources,
      resource_amount,
      resource_id,
    });

    expect(result).toEqual({ modifierKey: 'galacticCreditsIncrement' });
  });

  // Valid resource type and positive amount
  it('should return the modifierKey when the resource type is valid and the amount is positive', () => {
    const resources = [
      {
        resource_type: { id: '1', type: 'galactic credits' },
        value: 100,
      },
      {
        resource_type: { id: '2', type: 'common metals' },
        value: 50,
      },
    ];
    const resource_amount = 50;
    const resource_id = '1';

    const result = validateResourceModification({
      resources,
      resource_amount,
      resource_id,
    });

    expect(result).toEqual({ modifierKey: 'galacticCreditsIncrement' });
  });

  // Invalid resource type
  it('should return an error when the resource type is invalid', () => {
    const resources = [
      {
        resource_type: { id: '1', type: 'galactic credits' },
        value: 100,
      },
      {
        resource_type: { id: '2', type: 'common metals' },
        value: 50,
      },
    ];
    const resource_amount = 10;
    const resource_id = '3';

    const result = validateResourceModification({
      resources,
      resource_amount,
      resource_id,
    });

    expect(result).toEqual({ error: ResourceErrorTypes.ResourceNotUnlocked });
  });
});
