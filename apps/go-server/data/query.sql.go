// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package idleversedata

import (
	"context"
)

const getGenerators = `-- name: GetGenerators :many
SELECT id, created_at, updated_at, galactic_empire_id, generator_type_id, planet_id, count from galactic_empire_resource_generator
`

func (q *Queries) GetGenerators(ctx context.Context) ([]GalacticEmpireResourceGenerator, error) {
	rows, err := q.db.Query(ctx, getGenerators)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GalacticEmpireResourceGenerator
	for rows.Next() {
		var i GalacticEmpireResourceGenerator
		if err := rows.Scan(
			&i.ID,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.GalacticEmpireID,
			&i.GeneratorTypeID,
			&i.PlanetID,
			&i.Count,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
