{
  "version": 2,
  "projects": {
    "food-client": {
      "root": "apps/food/client",
      "sourceRoot": "apps/food/client/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/web:webpack",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/food/client",
            "index": "apps/food/client/src/index.html",
            "main": "apps/food/client/src/main.tsx",
            "polyfills": "apps/food/client/src/polyfills.ts",
            "tsConfig": "apps/food/client/tsconfig.app.json",
            "assets": [
              "apps/food/client/src/favicon.ico",
              "apps/food/client/src/assets"
            ],
            "styles": ["apps/food/client/src/styles.css"],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/food/client/src/environments/environment.ts",
                  "with": "apps/food/client/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "food-client:build",
            "hmr": true
          },
          "configurations": {
            "production": {
              "buildTarget": "food-client:build:production",
              "hmr": false
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/food/client/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/food/client"],
          "options": {
            "jestConfig": "apps/food/client/jest.config.js",
            "passWithNoTests": true
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx push-dir --dir=dist/apps/food/client --branch=food-client-heroku-deploy --force"
              }
            ]
          }
        }
      },
      "tags": []
    },
    "food-client-e2e": {
      "root": "apps/food/client-e2e",
      "sourceRoot": "apps/food/client-e2e/src",
      "projectType": "application",
      "targets": {
        "e2e": {
          "executor": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/food/client-e2e/cypress.json",
            "devServerTarget": "food-client:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "food-client:serve:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/food/client-e2e/**/*.{js,ts}"]
          }
        }
      },
      "tags": [],
      "implicitDependencies": ["food-client"]
    },
    "food-gql": {
      "root": "libs/food-gql",
      "sourceRoot": "libs/food-gql/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/food-gql/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/food-gql"],
          "options": {
            "jestConfig": "libs/food-gql/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "food-hasura": {
      "root": "apps/food/hasura",
      "sourceRoot": "apps/food/hasura/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "echo Ready to run migrations."
              }
            ]
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "hasura metadata apply --project apps/food/hasura/db --endpoint $FOOD_HASURA_URL  --admin-secret $FOOD_HASURA_ADMIN_SECRET --skip-update-check"
              },
              {
                "command": "hasura migrate apply --project apps/food/hasura/db --endpoint $FOOD_HASURA_URL  --admin-secret $FOOD_HASURA_ADMIN_SECRET --database-name default --skip-update-check"
              },
              {
                "command": "hasura metadata reload --project apps/food/hasura/db --endpoint $FOOD_HASURA_URL  --admin-secret $FOOD_HASURA_ADMIN_SECRET --skip-update-check"
              }
            ]
          }
        }
      },
      "tags": []
    },
    "food-server": {
      "root": "apps/food/server",
      "sourceRoot": "apps/food/server/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/node:webpack",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/food/server",
            "main": "apps/food/server/src/main.ts",
            "tsConfig": "apps/food/server/tsconfig.app.json",
            "assets": ["apps/food/server/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/food/server/src/environments/environment.ts",
                  "with": "apps/food/server/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:node",
          "options": {
            "buildTarget": "food-server:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/food/server/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/food/server"],
          "options": {
            "jestConfig": "apps/food/server/jest.config.js",
            "passWithNoTests": true
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx push-dir --dir=dist/apps/food/server --branch=food-server-heroku-deploy --force"
              }
            ]
          }
        }
      },
      "tags": []
    },
    "food-standalone": {
      "root": "apps/food/standalone",
      "sourceRoot": "apps/food/standalone/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/web:webpack",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/food/standalone",
            "index": "apps/food/standalone/src/index.html",
            "main": "apps/food/standalone/src/index.tsx",
            "polyfills": "apps/food/standalone/src/polyfills.ts",
            "tsConfig": "apps/food/standalone/tsconfig.app.json",
            "assets": [
              "apps/food/standalone/src/favicon.ico",
              "apps/food/standalone/src/assets"
            ],
            "styles": ["apps/food/standalone/src/styles.css"],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/food/standalone/src/environments/environment.ts",
                  "with": "apps/food/standalone/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "food-standalone:build",
            "hmr": true
          },
          "configurations": {
            "production": {
              "buildTarget": "food-standalone:build:production",
              "hmr": false
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/food/standalone/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/food/standalone"],
          "options": {
            "jestConfig": "apps/food/standalone/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "galaxy-gen": {
      "root": "libs/galaxy-gen",
      "sourceRoot": "libs/galaxy-gen/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/galaxy-gen/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/galaxy-gen"],
          "options": {
            "jestConfig": "libs/galaxy-gen/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "galaxy-gql": {
      "root": "libs/galaxy-gql",
      "sourceRoot": "libs/galaxy-gql/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/galaxy-gql/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/galaxy-gql"],
          "options": {
            "jestConfig": "libs/galaxy-gql/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "graphql-utils": {
      "root": "libs/graphql-utils",
      "sourceRoot": "libs/graphql-utils/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/graphql-utils/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/graphql-utils"],
          "options": {
            "jestConfig": "libs/graphql-utils/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "idleverse-game-server": {
      "root": "apps/idleverse/game-server",
      "sourceRoot": "apps/idleverse/game-server/src",
      "projectType": "application",
      "targets": {
        "watch": {
          "executor": "./tools/executors/watch:watch",
          "options": {
            "sources": ["apps/idleverse/game-server/src"],
            "commands": [
              "nx build idleverse-game-server && docker restart idleverse-game-server",
              "echo Successfully rebuilt idleverse game server docker volume"
            ]
          }
        },
        "build": {
          "executor": "@nrwl/node:webpack",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/idleverse/game-server",
            "main": "apps/idleverse/game-server/src/main.ts",
            "tsConfig": "apps/idleverse/game-server/tsconfig.app.json",
            "assets": [
              {
                "glob": "**/*",
                "input": "apps/idleverse/game-server/src/assets",
                "output": "./"
              }
            ],
            "generatePackageJson": true
          },
          "configurations": {
            "production": {
              "sourceMap": false,
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/idleverse/game-server/src/environments/environment.ts",
                  "with": "apps/idleverse/game-server/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:node",
          "options": {
            "buildTarget": "idleverse-game-server:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/idleverse/game-server/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/idleverse/game-server"],
          "options": {
            "jestConfig": "apps/idleverse/game-server/jest.config.js",
            "passWithNoTests": true
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx push-dir --dir=dist/apps/idleverse/game-server --branch=heroku-deploy --force"
              }
            ]
          }
        }
      },
      "tags": []
    },
    "idleverse-hasura": {
      "root": "apps/idleverse/hasura",
      "sourceRoot": "apps/idleverse/hasura/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "echo Ready to run migrations."
              }
            ]
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "hasura metadata apply --project apps/idleverse/hasura/db --endpoint $IDLEVERSE_HASURA_URL  --admin-secret $IDLEVERSE_HASURA_ADMIN_SECRET --skip-update-check"
              },
              {
                "command": "hasura migrate apply --project apps/idleverse/hasura/db --endpoint $IDLEVERSE_HASURA_URL  --admin-secret $IDLEVERSE_HASURA_ADMIN_SECRET --database-name default --skip-update-check"
              },
              {
                "command": "hasura metadata reload --project apps/idleverse/hasura/db --endpoint $IDLEVERSE_HASURA_URL  --admin-secret $IDLEVERSE_HASURA_ADMIN_SECRET --skip-update-check"
              }
            ]
          }
        }
      },
      "tags": []
    },
    "idleverse-web": {
      "root": "apps/idleverse/web",
      "sourceRoot": "apps/idleverse/web/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/web:webpack",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/idleverse/web",
            "index": "apps/idleverse/web/src/index.html",
            "main": "apps/idleverse/web/src/index.tsx",
            "polyfills": "apps/idleverse/web/src/polyfills.ts",
            "tsConfig": "apps/idleverse/web/tsconfig.app.json",
            "assets": [
              "apps/idleverse/web/src/favicon.ico",
              "apps/idleverse/web/src/assets",
              "apps/idleverse/web/src/assets/spritesheets",
              {
                "glob": "**/*",
                "input": "apps/idleverse/web/src/assets",
                "output": "./"
              },
              {
                "glob": "**/*",
                "input": "apps/idleverse/web/src/assets/spritesheets",
                "output": "./spritesheets"
              }
            ],
            "styles": ["apps/idleverse/web/src/styles.css"],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack",
            "baseHref": "/idleverse/"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/idleverse/web/src/environments/environment.ts",
                  "with": "apps/idleverse/web/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "1mb",
                  "maximumError": "3mb"
                }
              ]
            },
            "docker": {
              "sourceMap": true,
              "fileReplacements": [
                {
                  "replace": "apps/idleverse/web/src/environments/environment.ts",
                  "with": "apps/idleverse/web/src/environments/environment.docker.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "idleverse-web:build",
            "hmr": true,
            "port": 3000
          },
          "configurations": {
            "production": {
              "buildTarget": "idleverse-web:build:production",
              "hmr": false
            },
            "docker": {
              "buildTarget": "idleverse-web:build:docker",
              "hmr": false
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/idleverse/web/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/idleverse/web"],
          "options": {
            "jestConfig": "apps/idleverse/web/jest.config.js",
            "passWithNoTests": true
          }
        },
        "deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx push-dir --dir=dist/apps/idleverse/web --branch=gh-pages --force"
              }
            ]
          }
        }
      },
      "tags": []
    },
    "idleverse-web-e2e": {
      "root": "apps/idleverse/web-e2e",
      "sourceRoot": "apps/idleverse/web-e2e/src",
      "projectType": "application",
      "targets": {
        "e2e": {
          "executor": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/idleverse/web-e2e/cypress.json",
            "devServerTarget": "idleverse-web:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "idleverse-web:serve:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/idleverse/web-e2e/**/*.{js,ts}"]
          }
        }
      },
      "tags": [],
      "implicitDependencies": ["idleverse-web"]
    }
  }
}
